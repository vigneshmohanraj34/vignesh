#include <stdio.h>
#include<malloc.h>
void create(int d);
struct tree
{
	int d;
	struct tree *left;
	struct tree *right;
}*root,*tmp,*tr,*prv;
void preorder(struct tree*);

int main(void) {
	int n,val,i;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		scanf("%d",&val);
	create(val);
	}
	tr=root->left;
	root->left=root->right;
	root->right=tr;
	preorder(root);
	return 0;
}
void create(int d)
{
	tmp=(struct tree *)malloc(sizeof(struct tree));
	tmp->d=d;
	tmp->left=tmp->right=NULL;
	if(root==NULL)
	root=tmp;
	else
	{
		tr=root;
		while(tr!=NULL)
		{
			prv=tr;
			if(tmp->d<tr->d)
			tr=tr->left;
			else
			tr=tr->right;
		}
		if(tmp->d<prv->d)
		prv->left=tmp;
		else
		prv->right=tmp;
		}
	
}
void preorder(struct tree *root1)
{
	if(root1!=NULL)
	{
	printf("%d",root1->d);
	tr=root->left;
	root->left=root->right;
	root->right=tr;
		preorder(root1->left);
		preorder(root1->right);
	}
}
